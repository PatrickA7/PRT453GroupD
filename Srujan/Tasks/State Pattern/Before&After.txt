class Order < ApplicationRecord
  def change_state
    case state
    when "cart"
      state = "checkout"
    when "checkout"
      state = "paying"
    when "paying"
      state = "pending"
    when "pending"
      state = "completed"
    when "completed"
      state = "delivered"
    else
      state = "cart"
    end
  end
end

*** AFTER ***


class Order < ApplicationRecord
  include AASM

  aasm(column: 'state') do
    state :cart, initial: true
    state :checkout, before_enter: :update_totals!
    state :pending
    state :completed, after_enter: :finalize!
    state :delivered
    state :canceled
    state :resumed,
    state :returned,
    state :paying

    event :next do
      transitions from: :cart, to: :checkout
      transitions from: :checkout, to: :paying
    end

    event :pending do
      transitions from: [:checkout, :paying], to: :pending
    end

    event :payment_received do
      transitions from: :pending, to: :paid
    end

    event :cancel do
      transitions to: :canceled
    end
